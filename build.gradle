plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "org.openapi.generator" version "4.3.0"
}

group = 'net.gabsire-087'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// depencencies for OpenAPI generated Spring code
	implementation 'io.swagger:swagger-annotations:1.6.0'
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.0'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

// out-of-the-box task with openapi-genrator plugin
openApiGenerate{
	generatorName = "spring"
	inputSpec = "$projectDir/demo-book-api/net-gabsire087-demo-book-api-1.0.0.yml"
	outputDir = "$buildDir/generated/"
	apiPackage = "net.gabsire087.springgradleopenapidemo.api.v1"
	modelPackage = "net.gabsire087.springgradleopenapidemo.api.v1.model"
	ignoreFileOverride = "./.openapi-generator-ignore"
}

// consider generated classes as source
sourceSets {
	main {
		java {
			srcDir "${buildDir}/generated/src/main/java"
			srcDir "${buildDir}/generated/sources/annotationProcessor/java/main"
		}
	}
}

compileJava.dependsOn tasks.openApiGenerate

test {
	useJUnitPlatform()
}

// determine which main class to use
springBoot {
	mainClassName = "net.gabsire087.springgradleopenapidemo.SpringGradleOpenapiDemoApplication"
}

// configuration to automatically run Spring Boot with profile dev
def activeProfiles = 'dev'

bootRun {
	args = ["--spring.profiles.active=" + activeProfiles]
}